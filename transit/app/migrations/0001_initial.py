# Generated by Django 4.1 on 2022-08-17 14:10

import app.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('sn', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('photo', models.ImageField(blank=True, null=True, upload_to=app.models.location)),
                ('birthday', models.DateField()),
                ('phone', models.CharField(max_length=15)),
                ('sex', models.CharField(choices=[('M', 'male'), ('F', 'female'), ('P', 'private')], max_length=1)),
                ('aptNo', models.IntegerField(verbose_name='apartment number')),
                ('laneNo', models.IntegerField(verbose_name='lane number')),
                ('street', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('zipcode', models.IntegerField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('sn', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('firstName', models.CharField(max_length=30, verbose_name='first name')),
                ('lastName', models.CharField(max_length=30, verbose_name='last name')),
                ('birthday', models.DateField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to=app.models.path)),
                ('category', models.CharField(choices=[('PT', 'Full-time'), ('FT', 'Part-time')], max_length=4)),
                ('sex', models.CharField(choices=[('M', 'male'), ('F', 'female'), ('P', 'private')], max_length=1)),
                ('aptNo', models.IntegerField(verbose_name='apartment number')),
                ('phone', models.CharField(max_length=15)),
                ('laneNo', models.IntegerField(verbose_name='lane number')),
                ('street', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('zipcode', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('sn', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('origin', models.CharField(default='station', max_length=50)),
                ('destination', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=200, verbose_name='destination address')),
                ('category', models.CharField(choices=[('inter', 'Inter-state'), ('intra', 'Intra-state'), ('cross', 'Cross-country')], max_length=7)),
                ('report', models.IntegerField()),
                ('status', models.CharField(choices=[('Cl', 'Close'), ('Op', 'Open')], max_length=5)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trips', to='app.driver')),
                ('management', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trips', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('G', 'Green'), ('R', 'Red'), ('Y', 'Gray')], max_length=5)),
                ('comment', models.TextField()),
                ('location', models.CharField(max_length=50)),
                ('coord', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='app.trip')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('label', models.CharField(choices=[('D', 'Driver'), ('M', 'Management')], max_length=5)),
                ('status', models.CharField(choices=[('S', 'send'), ('D', 'delivered'), ('R', 'read')], max_length=5)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='app.trip')),
            ],
        ),
    ]
