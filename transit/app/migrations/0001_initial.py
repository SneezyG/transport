# Generated by Django 4.1 on 2023-01-11 06:49

import app.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('office_line', models.CharField(blank=True, max_length=15, null=True, verbose_name='Office-line')),
                ('personal_line', models.CharField(blank=True, max_length=15, null=True, verbose_name='Personal-line')),
                ('is_agent', models.BooleanField(default=False, help_text='Designates that this user have access to the trip reporting part of this web-app')),
                ('currentTrip_id', models.CharField(max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('sn', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(blank=True, max_length=40, null=True, verbose_name="Company's name")),
                ('booker', models.CharField(max_length=40, verbose_name="Booker's name")),
                ('name1', models.CharField(max_length=40, verbose_name='Pick-up name')),
                ('name2', models.CharField(max_length=40, verbose_name='Delivery name')),
                ('contact1', models.CharField(max_length=15, verbose_name="Booker's contact")),
                ('contact2', models.CharField(max_length=15, verbose_name='Pick-up contact')),
                ('contact3', models.CharField(max_length=15, verbose_name='Delivery contact')),
                ('charges', models.CharField(max_length=30, validators=[app.models.castValidator], verbose_name='Amount due($)')),
                ('paid', models.BooleanField(default=False)),
                ('goods', models.TextField(verbose_name='Goods description')),
                ('pickup', models.CharField(max_length=150, verbose_name='pickup address')),
                ('delivery', models.CharField(max_length=150, verbose_name='delivery address')),
                ('doc1', models.FileField(blank=True, null=True, upload_to=app.models.doc1)),
                ('doc2', models.FileField(blank=True, null=True, upload_to=app.models.doc2)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.CharField(max_length=30, unique=True, verbose_name='id')),
                ('firstName', models.CharField(max_length=20, verbose_name='first name')),
                ('lastName', models.CharField(max_length=20, verbose_name='last name')),
                ('active', models.BooleanField(default=False)),
                ('birthday', models.DateField()),
                ('sex', models.CharField(choices=[('M', 'male'), ('F', 'female'), ('P', 'private')], max_length=1)),
                ('phone', models.CharField(max_length=15, verbose_name='phone number')),
                ('aptNo', models.IntegerField(verbose_name='apartment number')),
                ('laneNo', models.IntegerField(verbose_name='lane number')),
                ('street', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('nationality', models.CharField(max_length=30)),
                ('zipcode', models.IntegerField()),
                ('pay_day', models.DateField(auto_now=True, verbose_name='last pay-day')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=app.models.driv)),
            ],
            options={
                'db_table': 'driver',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Loader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.CharField(max_length=30, unique=True, verbose_name='id')),
                ('firstName', models.CharField(max_length=20, verbose_name='first name')),
                ('lastName', models.CharField(max_length=20, verbose_name='last name')),
                ('active', models.BooleanField(default=False)),
                ('birthday', models.DateField()),
                ('sex', models.CharField(choices=[('M', 'male'), ('F', 'female'), ('P', 'private')], max_length=1)),
                ('phone', models.CharField(max_length=15, verbose_name='phone number')),
                ('aptNo', models.IntegerField(verbose_name='apartment number')),
                ('laneNo', models.IntegerField(verbose_name='lane number')),
                ('street', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('nationality', models.CharField(max_length=30)),
                ('zipcode', models.IntegerField()),
                ('pay_day', models.DateField(auto_now=True, verbose_name='last pay-day')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=app.models.load)),
            ],
            options={
                'db_table': 'loader',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mechanic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.CharField(max_length=30, unique=True, verbose_name='id')),
                ('firstName', models.CharField(max_length=20, verbose_name='first name')),
                ('lastName', models.CharField(max_length=20, verbose_name='last name')),
                ('active', models.BooleanField(default=False)),
                ('birthday', models.DateField()),
                ('sex', models.CharField(choices=[('M', 'male'), ('F', 'female'), ('P', 'private')], max_length=1)),
                ('phone', models.CharField(max_length=15, verbose_name='phone number')),
                ('aptNo', models.IntegerField(verbose_name='apartment number')),
                ('laneNo', models.IntegerField(verbose_name='lane number')),
                ('street', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('nationality', models.CharField(max_length=30)),
                ('zipcode', models.IntegerField()),
                ('pay_day', models.DateField(auto_now=True, verbose_name='last pay-day')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=app.models.mech)),
            ],
            options={
                'db_table': 'mechanic',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('freelancer', models.CharField(choices=[('driv', 'Driver'), ('mech', 'Mechanic'), ('load', 'Loader')], max_length=5, unique=True)),
                ('short_range', models.CharField(max_length=30, validators=[app.models.castValidator], verbose_name='pay/short-range trip in $')),
                ('mid_range', models.CharField(max_length=30, validators=[app.models.castValidator], verbose_name='pay/mid-range trip in $')),
                ('long_range', models.CharField(max_length=30, validators=[app.models.castValidator], verbose_name='pay/long-range trip in $')),
                ('date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('sn', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('category', models.CharField(choices=[('sh', 'Short Range'), ('md', 'Mid Range'), ('lg', 'Long Range')], max_length=3)),
                ('report', models.IntegerField(verbose_name='Expected report')),
                ('status', models.CharField(choices=[('one', 'Open'), ('two', 'Close')], default='one', max_length=3)),
                ('progress', models.CharField(choices=[('0', 'pending'), ('1', 'Departed'), ('2', 'Pickup'), ('3', 'Onroad'), ('4', 'Delivered'), ('5', 'Arrived')], default='0', max_length=2)),
                ('date', models.DateTimeField()),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trip', to='app.booking')),
                ('drivers', models.ManyToManyField(related_name='trips', to='app.driver')),
                ('loaders', models.ManyToManyField(related_name='trips', to='app.loader')),
                ('management', models.ForeignKey(limit_choices_to={'is_superuser': False}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trips', to=settings.AUTH_USER_MODEL)),
                ('mechanics', models.ManyToManyField(related_name='trips', to='app.mechanic')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('G', 'Green'), ('R', 'Red'), ('Y', 'yellow')], max_length=2)),
                ('progress', models.CharField(choices=[('0', 'pending'), ('1', 'Departed'), ('2', 'Pickup'), ('3', 'Onroad'), ('4', 'Delivered'), ('5', 'Arrived')], default='0', max_length=2)),
                ('remark', models.CharField(max_length=25)),
                ('longitude', models.CharField(max_length=20)),
                ('latitude', models.TextField(max_length=20)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='app.trip')),
            ],
        ),
    ]
